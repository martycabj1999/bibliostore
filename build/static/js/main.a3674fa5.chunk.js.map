{"version":3,"sources":["reducers/buscarUsuarioReducer.js","store.js","actions/types.js","componentes/layout/Spinner.js","componentes/libros/Libros.js","componentes/libros/MostrarLibro.js","componentes/libros/NuevoLibro.js","componentes/libros/EditarLibro.js","componentes/suscriptores/FichaSuscriptor.js","componentes/libros/PrestamoLibro.js","actions/buscarUsuarioActions.js","componentes/suscriptores/Suscriptores.js","componentes/suscriptores/MostrarSuscriptor.js","componentes/suscriptores/EditarSuscriptor.js","componentes/suscriptores/NuevoSuscriptor.js","componentes/auth/Login.js","componentes/layout/Navbar.js","helpers/auth.js","App.js","serviceWorker.js","index.js"],"names":["initialState","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestore","firestoreReducer","usuario","state","action","type","nombre","apellido","codigo","carrea","carrera","window","__REDUX_DEVTOOLS_EXTENSION__","Spinner","className","firestoreConnect","collection","connect","props","libros","ordered","to","map","libro","key","id","titulo","ISBN","editorial","existencia","prestados","length","onClick","delete","doc","MostrarLibro","devolverLibro","libroActualizado","filter","elemento","update","btnPrestamo","this","prestado","fecha_solicitud","Component","storeAs","match","params","NuevoLibro","agregarLibro","e","preventDefault","nuevoLibro","history","add","then","push","leerDato","setState","target","name","value","onSubmit","placeholder","required","onChange","min","EditarLibro","tituloInput","React","createRef","editorialInput","ISBNInput","existenciaInput","actualizarLibro","current","defaultValue","ref","FichaSuscriptor","alumno","PrestamoLibro","noResultados","busqueda","buscarAlumno","buscarUsuario","where","get","resultado","empty","datos","docs","data","solicitarPrestamo","Date","toLocaleDateString","fichaAlumno","btnSolicitar","mensajeResultado","console","log","suscriptores","suscriptor","EditarSuscriptor","nombreInput","apellidoInput","carreraInput","codigoInput","editarSuscriptor","suscriptorActualizado","NuevoSuscriptor","agregarSuscriptor","nuevoSuscriptor","Login","email","password","iniciarSesion","login","catch","error","leerDatos","firebaseConnect","Navbar","usuarioAutenticado","cerrarSesion","logout","auth","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","uid","locationHelper","locationHelperBuilder","UserIsAuthenticated","createBrowserHistory","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","App","exact","path","component","Libros","Suscriptores","MostrarSuscriptor","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3674fa5.chunk.js","sourcesContent":["import { BUSCAR_USUARIO } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case BUSCAR_USUARIO:\n            return{\n                ...state,\n                nombre: action.usuario.nombre,\n                apellido: action.usuario.apellido,\n                codigo: action.usuario.codigo,\n                carrea: action.usuario.carrera\n            }\n        default:\n            return state;\n    }\n}\n\n","import { createStore, combineReducers, compose } from 'redux';\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n//Custom Reducers\nimport buscarUsuarioReducer from './reducers/buscarUsuarioReducer';\n\n//configurar firestore\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBxfTE-aNyYZKEWnYcExuKhJeQKbiNaTyY\",\n    authDomain: \"bibliostore-10b82.firebaseapp.com\",\n    databaseURL: \"https://bibliostore-10b82.firebaseio.com\",\n    projectId: \"bibliostore-10b82\",\n    storageBucket: \"bibliostore-10b82.appspot.com\",\n    messagingSenderId: \"153278512373\",\n    appId: \"1:153278512373:web:395c8b6e8fc4ff24\"\n}\n\n\n//inicializar firebase\nfirebase.initializeApp(firebaseConfig);\n\n// configuracion de react-redux\nconst rrfConfig = {\n    userProfile : 'users',\n    useFirestoreForProfile: true\n}\n\n//crear el enhacer con compose de redux y firestore\nconst createStoreWithFirebase = compose (\n    reactReduxFirebase(firebase, rrfConfig),\n    reduxFirestore(firebase)\n)(createStore);\n\n//reducer\nconst rootReducer = combineReducers({\n    firebase : firebaseReducer,\n    firestore : firestoreReducer,\n    usuario: buscarUsuarioReducer\n})\n\n//state inicial\nconst initialState = {};\n\n//create el store\nconst store = createStoreWithFirebase(rootReducer, initialState, compose(\n    reactReduxFirebase(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;","export const BUSCAR_USUARIO = 'BUSCAR_USUARIO';","import React from 'react';\nimport '../../spinner.css'\n\nconst Spinner = () => {\n    return ( \n        <div className=\"spinner\">\n            <div className=\"bounce1\"></div>\n            <div className=\"bounce2\"></div>\n            <div className=\"bounce3\"></div>\n        </div>\n     );\n}\n \nexport default Spinner;","import React from 'react';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nconst Libros = ({libros, firestore}) => {\n\n    const eliminarLibro = id => {\n        //eliminar libro de firestore\n        firestore.delete({\n            collection : 'libros',\n            doc : id\n        });\n    }\n\n    if (!libros) return <Spinner />\n\n\n    return ( \n        <div className=\"row\">\n            <div className=\"col-12 mb-4\">\n                <Link to=\"/libros/nuevo\" className=\"btn btn-success\">\n                    <i className=\"fas fa-plus\"></i> {''}\n                    Nuevo Libro\n                </Link>\n            </div>\n            <div className=\"col-md-8\">\n                <h2>\n                    <i className=\"fas fa-book\"></i> {''}\n                    Libros\n                </h2>\n            </div>\n            <table className=\"table table-striped mt-4\">\n                <thead className=\"text-light bg-primary\">\n                    <tr>\n                        <th>Titulo</th>\n                        <th>ISBN</th>\n                        <th>Editorial</th>\n                        <th>Existencia</th>\n                        <th>Disponibles</th>\n                        <th>Acciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {libros.map(libro => (\n                        <tr key={libro.id}>\n                            <td>{libro.titulo}</td>\n                            <td>{libro.ISBN}</td>\n                            <td>{libro.editorial}</td>\n                            <td>{libro.existencia}</td>\n                            <td>{libro.existencia - libro.prestados.length}</td>\n                            <td>\n                                <Link \n                                    to={`/libros/mostrar/${libro.id}`}\n                                    className=\"btn btn-success btn-block\"\n                                >\n                                    <i className=\"fas fa-angle-double-right\"></i> {''}\n                                    Más Información\n                                </Link>\n                                <button type=\"button\" className=\"btn btn-danger btn-block\" onClick={ () => eliminarLibro(libro.id)}>\n                                    <i className=\"fas fa-trash-alt\"></i> {''}\n                                    Eliminar\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n     );\n}\n\nLibros.propTypes = {\n    firestore : PropTypes.object.isRequired,\n    libros : PropTypes.array\n}\n \nexport default compose(\n    firestoreConnect([{collection : 'libros' }]),\n    connect((state, props) => ({\n        libros: state.firestore.ordered.libros\n    }))\n)(Libros);","import React, { Component } from 'react';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nclass MostrarLibro extends Component {\n    \n    devolverLibro = id => {\n        //extraer firestore\n        const {firestore} = this.props;\n        \n        //copia del libro\n        const libroActualizado = {...this.props.libro};\n\n        //eliminar la persona que esta realizando la devolcuion de prestados\n        const prestados = libroActualizado.prestados.filter(elemento => elemento.codigo !== id);\n        libroActualizado.prestados = prestados;\n\n        //actualizar en firebase\n        firestore.update({\n            collection: 'libros',\n            doc: libroActualizado.id\n        }, libroActualizado);\n    }\n\n    \n    render() { \n\n        //extraer libro\n        const { libro } = this.props;\n\n        if(!libro) return <Spinner />\n        \n        \n        //boton para solicitar un libro\n        let btnPrestamo;\n\n        if(libro.existencia - libro.prestados.length > 0) {\n            btnPrestamo = <Link to ={`/libros/prestamo/${libro.id}`}\n                                className=\"btn btn-success my-3\"\n                            >Solicitar Prestamo</Link>\n        } else {\n            btnPrestamo = null;\n        }\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-md-6 mb-4\">\n                    <Link to=\"/\" className=\"btn btn-secondary\" >\n                        <i className=\"fas fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-md-6 mb-4\">\n                    <Link \n                        to={`/libros/editar/${libro.id}`} \n                        className=\"btn btn-primary float-right\" >\n                        <i className=\"fas fa-pencil-alt\"></i> {''}\n                        Editar Libro\n                    </Link>\n                </div>\n\n                <hr className=\"mx-5 w-100\"/>\n\n                <div className=\"col-12\">\n                    <h2 className=\"mb-4\">{libro.titulo}</h2>\n\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            ISBN:\n                        </span> {''}\n                        {libro.ISBN}\n                    </p>\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            Editorial:\n                        </span> {''}\n                        {libro.editorial}\n                    </p>\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            Existencia:\n                        </span> {''}\n                        {libro.existencia}\n                    </p>\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            Disponibles:\n                        </span> {''}\n                        {libro.existencia - libro.prestados.length}\n                    </p>\n\n                    {/*boton para solicitar un prestamo de libro*/}\n                    {btnPrestamo}\n\n                    {/*muestra las personas que tienen los libros*/}\n                    <h3 className=\"my-2\">Personas que tienen el libro prestado</h3>\n                    {libro.prestados.map(prestado => (\n                        <div key={prestado.codigo} className=\"card-my 2\">\n                            <h4 className=\"card-header\">\n                                {prestado.nombre} {prestado.apellido}\n                            </h4>\n                            <div className=\"card-body\">\n                                <p>\n                                    <span className=\"font-weight-bold\">\n                                        Codigo:\n                                    </span> {''}\n                                    {prestado.codigo}\n                                </p>\n                                <p>\n                                    <span className=\"font-weight-bold\">\n                                        Carrera:\n                                    </span> {''}\n                                    {prestado.carrera}\n                                </p>\n                                <p>\n                                    <span className=\"font-weight-bold\">\n                                        Fecha Solicitud:\n                                    </span> {''}\n                                    {prestado.fecha_solicitud}\n                                </p>\n                            </div>\n                            <div className=\"card-footer\">\n                                <button \n                                    type=\"button\" \n                                    className=\"btn btn-danger font-weight-bold\"\n                                    onClick={()=> this.devolverLibro(prestado.codigo)}\n                                >\n                                Realizar Devolución\n                                </button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n         );\n    }\n}\n\nMostrarLibro.propTypes = {\n    firestore :PropTypes.object.isRequired\n}\n \nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'libros',\n            storeAs : 'libro',\n            doc : props.match.params.id\n        }\n    ]),\n    connect(({ firestore: {ordered}}, props ) => ({\n        libro : ordered.libro && ordered.libro[0]\n    }))\n)(MostrarLibro);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\nclass NuevoLibro extends Component {\n    state = { \n        titulo: '',\n        ISBN: '',\n        editorial: '',\n        existencia: '',\n\n     }\n    \n    //guarda el libro en la base de datos\n    agregarLibro = e => {\n        e.preventDefault();\n        \n        //tomar una copia del state\n        const nuevoLibro = this.state;\n\n        //agregar un arreglo de prestados\n        nuevoLibro.prestados = [];\n\n        //extraer firestore son sus metodos\n        const { firestore, history } = this.props;\n\n        //añadirlo a la base de datos y redireccionar\n        firestore.add({collection : 'libros'}, nuevoLibro)\n            .then( () => history.push('/'));\n    }\n\n\n    //alamce lo que el usuario escribe en el state\n    leerDato = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    render() { \n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to=\"/\" className=\"btn btn-secondary\" >\n                        <i className=\"fas fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fas fa-book\"></i> {''}\n                        Nuevo Libro\n                    </h2>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 mt-5\">\n                            <form onSubmit={this.agregarLibro} >\n                                <div className=\"form-group\">\n                                    <label>Titulo:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"titulo\"\n                                        placeholder=\"Titulo o Nombre del Libro\"\n                                        required\n                                        value={this.state.titulo}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Editorial:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"editorial\"\n                                        placeholder=\"Editorial del Libro\"\n                                        required\n                                        value={this.state.editorial}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>ISBN:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"ISBN\"\n                                        placeholder=\"ISBN del Libro\"\n                                        required\n                                        value={this.state.ISBN}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Existencia:</label>\n                                    <input \n                                        type=\"number\"\n                                        min=\"0\"\n                                        className=\"form-control\"\n                                        name=\"existencia\"\n                                        placeholder=\"Cantidad de Existencia\"\n                                        required\n                                        value={this.state.existencia}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n\n                                <input type=\"submit\" value=\"Agregar Libro\" className=\"btn btn-success\"/>\n                                \n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n\nNuevoLibro.propTypes = {\n    firestore:PropTypes.object.isRequired\n}\n \nexport default firestoreConnect()(NuevoLibro);","import React, { Component } from 'react';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nclass EditarLibro extends Component {\n    \n    //refs\n    tituloInput = React.createRef();\n    editorialInput = React.createRef();\n    ISBNInput = React.createRef();\n    existenciaInput = React.createRef();\n\n    //actualiza el libro en firebase\n    actualizarLibro = e => {\n        e.preventDefault();\n\n        //construir el nuevo objeto\n        const libroActualizado = {\n            titulo : this.tituloInput.current.value,\n            editorial : this.editorialInput.current.value,\n            ISBN : this.ISBNInput.current.value,\n            existencia : this.existenciaInput.current.value\n        }\n\n        //leer firestore y history\n        const { firestore, history, libro } = this.props;\n\n        //actualizar en firestore\n        firestore.update({\n            collection: 'libros',\n            doc: libro.id\n        }, libroActualizado).then(history.push('/'))\n\n    }\n\n    render() { \n\n        //obtener el linro\n        const { libro } = this.props;\n\n        if(!libro) return <Spinner />\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to={'/'} className=\"btn btn-secondary\">\n                    <i className=\"fas fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fas fa-book\"></i> {''}\n                        Editar Libro\n                    </h2>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 mt-5\">\n                            <form onSubmit={this.actualizarLibro}>\n                                <div className=\"form-group\">\n                                    <label>Titulo:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"titulo\"\n                                        placeholder=\"Titulo o Nombre del Libro\"\n                                        required\n                                        defaultValue={libro.titulo}\n                                        ref={this.tituloInput}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Editorial:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"editorial\"\n                                        placeholder=\"Editorial del Libro\"\n                                        required\n                                        defaultValue={libro.editorial}\n                                        ref={this.editorialInput}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>ISBN:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"ISBN\"\n                                        placeholder=\"ISBN del Libro\"\n                                        required\n                                        defaultValue={libro.ISBN}\n                                        ref={this.ISBNInput}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Existencia:</label>\n                                    <input \n                                        type=\"number\"\n                                        min=\"0\"\n                                        className=\"form-control\"\n                                        name=\"existencia\"\n                                        placeholder=\"Cantidad de Existencia\"\n                                        required\n                                        defaultValue={libro.existencia}\n                                        ref={this.existenciaInput}\n                                    />\n                                </div>\n\n                                <input type=\"submit\" value=\"Editar Libro\" className=\"btn btn-success\"/>\n                                \n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n \nEditarLibro.propTypes = {\n    firestore: PropTypes.object.isRequired\n}\n\nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'libros',\n            storeAs : 'libro',\n            doc : props.match.params.id\n        }\n    ]),\n    connect(({ firestore: {ordered}}, props ) => ({\n        libro : ordered.libro && ordered.libro[0]\n    }))\n)(EditarLibro);","import React from 'react';\n\nconst FichaSuscriptor = ({alumno}) => {\n    return ( \n        <div className=\"card my-3\">\n            <h3 className=\"card-header bg-primary text-white\">Datos del Solicitante</h3>\n            <div className=\"card-body\">\n                <p className=\"font-weight-bold\">Nombre: {''}\n                    <span className=\"ofnt-weight-normal\">{alumno.nombre}</span>\n                </p>\n                <p className=\"font-weight-bold\">Código: {''}\n                    <span className=\"ofnt-weight-normal\">{alumno.codigo}</span>\n                </p>\n                <p className=\"font-weight-bold\">Carrera: {''}\n                    <span className=\"ofnt-weight-normal\">{alumno.carrera}</span>\n                </p>\n            </div>\n        </div>\n     );\n}\n \nexport default FichaSuscriptor;\n","import React, { Component } from 'react';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport FichaSuscriptor from '../suscriptores/FichaSuscriptor';\n\n//REDUX Actions\nimport { buscarUsuario } from '../../actions/buscarUsuarioActions';\nclass PrestamoLibro extends Component {\n    state = { \n        noResultados: false,\n        busqueda : ''\n     }\n    //buscar alumno por codigo\n    buscarAlumno = e => {\n        e.preventDefault();\n\n        //obtener el valor a buscar\n        const { busqueda } = this.state;\n\n        //extraer firestore\n        const { firestore, buscarUsuario } = this.props;\n\n        //hacer la consulta\n        const coleccion = firestore.collection('suscriptores');\n        const consulta = coleccion.where(\"codigo\", \"==\", busqueda).get();\n\n        //leer los resultados\n        consulta.then(resultado => {\n            if (resultado.empty){\n                //no hay resultados\n\n                //almacenar en redux un objeto vacio\n                buscarUsuario({})\n                this.setState({\n                    noResultados: true\n                })\n            } else {\n                //si hay resultados\n                const datos = resultado.docs[0];\n                //colocar el resultado en el state de redux\n\n                buscarUsuario(datos.data())\n                //actualizar el state en base a si hay resultados\n                this.setState({\n                    noResultados: false\n                })\n            }\n        })\n\n    }\n\n    //almacena los datos del alumno para solicitar el libro\n    solicitarPrestamo = () => {\n        const { usuario } = this.props;\n\n        //fecha de alta\n        usuario.fecha_solicitud = new Date().toLocaleDateString();\n\n        //no se pueden mutar los props, tomar una copia y crear un arreglo nuevo\n        let prestados = [];\n        prestados = [...this.props.libro.prestados, usuario];\n\n        //copiar el objeto y agregar los prestados\n        const libro = {...this.props.libro};\n\n        //eliminar los prestados anteriores\n        delete libro.prestados;\n\n        //asignar los prestados\n        libro.prestados = prestados;\n        \n        //extraer firestore\n        const  { firestore, history } = this.props;\n\n        //almacenar en la BD\n        firestore.update({\n            collection: 'libros',\n            doc: libro.id\n        }, libro).then(history.push('/'));\n    \n    }\n\n    //almacenar el codigo en el state\n    leerDato = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    render() { \n\n        //extraer el libro\n        const { libro } = this.props;\n        \n        //mostrar el spinner\n        if (!libro) return <Spinner />\n\n        //extraer los datos del alumno\n        const { usuario } = this.props;\n\n        let fichaAlumno,btnSolicitar;\n        if (usuario.nombre) {\n            fichaAlumno = <FichaSuscriptor \n                                alumno={usuario}\n                            />\n            btnSolicitar = <button\n                                type=\"button\"\n                                className=\"btn btn-primary btn-block\"\n                                onClick={this.solicitarPrestamo}\n                                >Solicitar Prestamo</button>\n        } else {\n            fichaAlumno=null;\n            btnSolicitar=null;\n        }\n\n        //mostrar mensaje de error\n        const { noResultados } = this.state;\n        let mensajeResultado = '';\n        if (noResultados) {\n            console.log('entra');\n            mensajeResultado = <div className=\"alert alert-danger text-center font-weight-bold\">No hay resultados para ese código.</div>\n        } else {\n            console.log('entra else');\n            mensajeResultado = null;\n        }\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to={'/'} className=\"btn btn-secondary\">\n                    <i className=\"fas fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fas fa-book\"></i> {''}\n                        Solicitar Prestamo : {libro.titulo}\n                    </h2>\n\n                    <div className=\"row justify-content-center mt-5\">\n                        <div className=\"col-md-8\">\n                            <form onSubmit={this.buscarAlumno} className=\"mb-4\">\n                                <legend className=\"color-primary text-center\">\n                                    Busca el Suscriptor por Código\n                                </legend>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        name=\"busqueda\" \n                                        className=\"form-control\" \n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-success btn-block\"/>\n                            </form>\n\n                            {/* Muestra la ficha del alumno y el botno para solicitar el prestamo */}\n                            {fichaAlumno}\n                            {btnSolicitar}\n\n                            {/* Muestra un mensaje de NO RESULTADOS */}\n\n                            {mensajeResultado}\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n \nPrestamoLibro.propTypes = {\n    firestore: PropTypes.object.isRequired\n}\n\nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'libros',\n            storeAs : 'libro',\n            doc : props.match.params.id\n        }\n    ]),\n    connect(({ firestore: {ordered}, usuario}, props ) => ({\n        libro : ordered.libro && ordered.libro[0],\n        usuario : usuario\n    }), { buscarUsuario })\n)(PrestamoLibro);","import { BUSCAR_USUARIO } from './types';\n\nexport const buscarUsuario = usuario => {\n    return {\n        type: BUSCAR_USUARIO,\n        usuario\n    }\n}\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nconst Suscriptores = ({suscriptores, firestore, }) => {\n\n    if (!suscriptores) return <Spinner />;\n\n    //eliminar suscriptores\n    const eliminarSuscriptor = id => {\n        //eliminar\n        firestore.delete({\n            collection : 'suscriptores',\n            doc : id\n        });\n    }\n\n    return ( \n        <div className=\"row\">\n            <div className=\"col-md-12 mb-4\">\n                <Link\n                    to=\"/suscriptor/nuevo\"\n                    className=\"btn btn-success\"\n                >\n                <i className=\"fas fal-plus\"></i>{''}\n                Nuevo Suscriptor\n                </Link>\n            </div>\n            <div className=\"col-md-8\">\n                <h2><i className=\"fas fa-users\"></i> Suscriptores</h2>\n            </div>\n            <table className=\"table table-striped mt-4\">\n                <thead className=\"text-light bg-primary\">\n                    <th>Nombre</th>\n                    <th>Carrera</th>\n                    <th>Acciones</th>\n                </thead>\n\n                <tbody>\n                    {suscriptores.map(suscriptor => (\n                        <tr key={suscriptor.id}>\n                            <td>{suscriptor.nombre} {suscriptor.apellido}</td>\n                            <td>{suscriptor.carrera}</td>\n                            <td>\n                                <Link \n                                to={`/suscriptor/mostrar/${suscriptor.id}`}\n                                className=\"btn btn-success btn-block\"\n                                >\n                                <i className=\"fas fa-angle-dougle-right\"></i> {''}\n                                Más Información\n                                </Link>\n\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger btn-block\"\n                                    onClick={ () => eliminarSuscriptor(suscriptor.id)}\n                                >\n                                <i className=\"fas fa-trash-alt\"></i> {''}\n                                Eliminar\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n\n            </table>\n        </div>\n     );\n}\n\nSuscriptores.propTypes = {\n    firestore : PropTypes.object.isRequired,\n    suscriptores : PropTypes.array\n}\n \nexport default compose(\n    firestoreConnect([{collection : 'suscriptores' }]),\n    connect((state, props) => ({\n        suscriptores: state.firestore.ordered.suscriptores\n    }))\n)(Suscriptores);","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nconst MostrarSuscriptor = ({suscriptor}) => {\n\n    if (!suscriptor) return <Spinner />\n\n    return ( \n        <div className=\"row\">\n            <div className=\"col-md-6 mb-4\">\n                <Link to=\"/suscriptores\" className=\"btn btn-secondary\">\n                    <i className=\"fas fa-arrow-circle-left\" ></i> {''}\n                    Volver al Listado\n                </Link>\n            </div>\n            <div className=\"col-md-6\">\n                <Link to={`/suscriptor/editar/${suscriptor.id}`} className=\"btn btn-primary float-right\">\n                    <i className=\"fas fa-pencil-alt\"></i> {''}\n                    Editar Suscriptor\n                </Link>\n            </div>\n            <hr className=\"mx-5 w-100\"/>\n            <div className=\"col-12\">\n                <h2 className=\"mb-4\">\n                    {suscriptor.nombre} {suscriptor.apellido}\n                </h2>\n\n                <p>\n                    <span className=\"font-weight-bold\">\n                        Carrera:\n                    </span> {''}\n                    {suscriptor.carrera}\n                </p>    \n                <p>\n                    <span className=\"font-weight-bold\">\n                        Codigo:\n                    </span> {''}\n                    {suscriptor.codigo}\n                </p>    \n            </div>\n        </div>\n     );\n}\n\nMostrarSuscriptor.propTypes = {\n    firestore :PropTypes.object.isRequired\n}\n \nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'suscriptores',\n            storeAs : 'suscriptor',\n            doc : props.match.params.id\n        }\n    ]),\n    connect(({ firestore: {ordered}}, props ) => ({\n        suscriptor : ordered.suscriptor && ordered.suscriptor[0]\n    }))\n)(MostrarSuscriptor);","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nclass EditarSuscriptor extends Component {\n\n    // crear los refs\n    nombreInput = React.createRef();\n    apellidoInput = React.createRef();\n    carreraInput = React.createRef();\n    codigoInput = React.createRef();\n\n    //edita el suscriptor en la base de datos \n    editarSuscriptor = e => {\n        e.preventDefault();\n\n        //crear el objeto que va a actualizar\n        const suscriptorActualizado = {\n            nombre : this.nombreInput.current.value,\n            apellido : this.apellidoInput.current.value,\n            carrera : this.carreraInput.current.value,\n            codigo : this.codigoInput.current.value\n        }\n\n        //extraer firestore y history de props\n        const { suscriptor, firestore, history } = this.props;\n\n        //almacenar en la base de datos con firestore\n        firestore.update({\n            collection: 'suscriptores',\n            doc: suscriptor.id\n        }, suscriptorActualizado ).then(history.push('/suscriptores'));\n\n    }\n    \n    render() { \n\n        const {suscriptor} = this.props;\n\n        if (!suscriptor) return <Spinner />\n\n        return (\n                <div className=\"row\">\n                    <div className=\"col-12 mb-4\">\n                        <Link to={'/suscriptores'} className=\"btn btn-secondary\">\n                        <i className=\"fas fa-arrow-circle-left\"></i> {''}\n                            Volver al Listado\n                        </Link>\n                    </div>\n                    <div className=\"col-12\">\n                        <h2>\n                            <i className=\"fas fa-user\"></i> {''}\n                            Editar Suscriptor\n                        </h2>\n\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-md-8 mt-5\">\n                                <form onSubmit={this.editarSuscriptor}>\n                                    <div className=\"form-group\">\n                                        <label>Nombre:</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"nombre\"\n                                            placeholder=\"Nombre del Suscriptor\"\n                                            required\n                                            ref={this.nombreInput}\n                                            defaultValue={suscriptor.nombre}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Apellido:</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"apellido\"\n                                            placeholder=\"Apellido del Suscriptor\"\n                                            required\n                                            ref={this.apellidoInput}\n                                            defaultValue={suscriptor.apellido}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Carrera:</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"carrera\"\n                                            placeholder=\"Carrera del Suscriptor\"\n                                            required\n                                            ref={this.carreraInput}\n                                            defaultValue={suscriptor.carrera}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Codigo:</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"codigo\"\n                                            placeholder=\"Codigo del Suscriptor\"\n                                            required\n                                            ref={this.codigoInput}\n                                            defaultValue={suscriptor.codigo}\n                                        />\n                                    </div>\n\n                                    <input type=\"submit\" value=\"Editar Suscriptor\" className=\"btn btn-success\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n          );\n    }\n}\n\nEditarSuscriptor.propTypes = {\n    firestore: PropTypes.object.isRequired\n}\n\nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'suscriptores',\n            storeAs : 'suscriptor',\n            doc : props.match.params.id\n        }\n    ]),\n    connect(({ firestore: {ordered}}, props ) => ({\n        suscriptor : ordered.suscriptor && ordered.suscriptor[0]\n    }))\n)(EditarSuscriptor);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\nclass NuevoSuscriptor extends Component {\n    state = { \n        nombre: '',\n        apellido: '',\n        carrera: '',\n        codigo: ''\n     }\n\n    //agrega un nuevo suscriptor a la base de datos\n    agregarSuscriptor = e => {\n        e.preventDefault();\n\n        //extraer los valores del state\n        const nuevoSuscriptor = {...this.state};\n\n        //extraer firestore de props\n        const { firestore, history } = this.props;\n\n        //guardarlo en la base de datos\n        firestore.add({\n            collection : 'suscriptores'\n        }, nuevoSuscriptor)\n        .then( () => history.push('/suscriptores'))\n    }\n\n    //extrae los valores del input y los coloca en el state\n    leerDato = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    render() { \n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to={'/suscriptores'} className=\"btn btn-secondary\">\n                    <i className=\"fas fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fas fa-user-plus\"></i> {''}\n                        Nuevo Suscriptor\n                    </h2>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 mt-5\">\n                            <form onSubmit={this.agregarSuscriptor}>\n                                <div className=\"form-group\">\n                                    <label>Nombre:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"nombre\"\n                                        placeholder=\"Nombre del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.nombre}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Apellido:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"apellido\"\n                                        placeholder=\"Apellido del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.apellido}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Carrera:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"carrera\"\n                                        placeholder=\"Carrera del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.carrera}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Codigo:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"codigo\"\n                                        placeholder=\"Codigo del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.codigo}\n                                    />\n                                </div>\n\n                                <input type=\"submit\" value=\"Agregar Suscriptor\" className=\"btn btn-success\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n\nNuevoSuscriptor.propTypes = {\n    firestore : PropTypes.object.isRequired\n}\n \nexport default firestoreConnect()(NuevoSuscriptor);","import React, { Component } from 'react';\n\nimport { firebaseConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\nclass Login extends Component {\n    state = { \n        email: '',\n        password: ''\n     }\n\n    //inicia sesion en firebase\n    iniciarSesion= e => {\n        e.preventDefault();\n\n        //extraer firebase\n        const { firebase } = this.props;\n        \n        //extraer el state\n        const { email, password } =this.state;\n\n        //autenticar el usuario\n        firebase.login({\n            email,\n            password\n        })\n        .then( resultado => console.log('NO hubo un error'))\n        .catch(error => console.log('hubo un error'))\n    }\n\n    //almacena lo que el usuario escribe en el state\n    leerDatos = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n    render() { \n        return ( \n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-5\">\n                    <div className=\"card-mt-5\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center py-4\">\n                                <i className=\"fas fa-lock\"></i> {''}\n                                Iniciar Sesión\n                            </h2>\n\n                            <form onSubmit={this.iniciarSesion}>\n                                <div className=\"form-group\">\n                                    <label>Email:</label>\n                                    <input \n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        required\n                                        value={this.state.email}\n                                        onChange={this.leerDatos}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Password:</label>\n                                    <input \n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        required\n                                        value={this.state.password}\n                                        onChange={this.leerDatos}\n                                    />\n                                </div>\n                                <input type=\"submit\"\n                                    className=\"btn btn-success btn-block\"\n                                    value=\"Iniciar Sesión\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n\nLogin.propTypes = {\n    firebase : PropTypes.object.isRequired\n}\n \nexport default firebaseConnect()(Login);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firebase } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\nclass Navbar extends Component {\n    state = { \n        usuarioAutenticado : false\n     }\n\n    //recibe los props automaticamente\n    static getDerivedStateFromProps(props, state) {\n        const { auth } = props;\n\n        if(auth.uid){\n            return { usuarioAutenticado : true }\n        } else {\n            return { usuarioAutenticado : false }\n        }\n    }\n\n    //cerrar la sesion\n    cerrarSesion = () => {\n        const { firebase } = this.props;\n        firebase.logout();\n    }\n\n    render() { \n\n        const { usuarioAutenticado } = this.state;\n\n        //extraer datos de autenticacion\n        const { auth } = this.props;\n\n        return ( \n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-4\">\n                <nav className=\"navbar navbar-light\">\n                    <span className=\"navbar-brand mb-0 h1\">\n                        Administrador de Biblioteca\n                    </span>\n                </nav>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\n                    { usuarioAutenticado ? (\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to={'/suscriptores'} className=\"nav-link\" >\n                            Suscriptores\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={'/'} className=\"nav-link\" >\n                            Libros\n                            </Link>\n                        </li>\n                    </ul>\n                    ) : null }\n\n                    {usuarioAutenticado ? (\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                                <a href=\"#!\" className=\"nav-link\">\n                                    { auth.email }\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger\"\n                                    onClick={this.cerrarSesion}\n                                >\n                                    Cerrar Sesión\n                                </button>\n                            </li>\n                        </ul>\n                    ) : null}\n                </div>\n            </nav>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    firebase : PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\n \nexport default compose(\n    firebaseConnect(),\n    connect((state, props) => ({\n        auth: state.firebase.auth\n    }))\n)(Navbar);","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\nimport { createBrowserHistory } from 'history'\nimport Spinner from '../componentes/layout/Spinner'; // change it to your custom component\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory()\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsAuthenticated',\n  AuthenticatingComponent: Spinner,\n  allowRedirectBack: true,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && !auth.isEmpty,\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  AuthenticatingComponent: Spinner,\n  allowRedirectBack: false,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && auth.isEmpty,\n});","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n//import\nimport Libros from './componentes/libros/Libros';\nimport MostrarLibro from './componentes/libros/MostrarLibro';\nimport NuevoLibro from './componentes/libros/NuevoLibro';\nimport EditarLibro from './componentes/libros/EditarLibro';\nimport PrestamoLibro from './componentes/libros/PrestamoLibro';\n\nimport Suscriptores from './componentes/suscriptores/Suscriptores';\nimport MostrarSuscriptor from './componentes/suscriptores/MostrarSuscriptor';\nimport EditarSuscriptor from './componentes/suscriptores/EditarSuscriptor';\nimport NuevoSuscriptor from './componentes/suscriptores/NuevoSuscriptor';\n\nimport Login from './componentes/auth/Login';\nimport Navbar from './componentes/layout/Navbar';\n\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from './helpers/auth'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Libros} />\n            <Route exact path=\"/libros/mostrar/:id\" component={UserIsAuthenticated(MostrarLibro)} />\n            <Route exact path=\"/libros/nuevo\" component={UserIsAuthenticated(NuevoLibro)} />\n            <Route exact path=\"/libros/editar/:id\" component={UserIsAuthenticated(EditarLibro)} />\n            <Route exact path=\"/libros/prestamo/:id\" component={UserIsAuthenticated(PrestamoLibro)} />\n\n\n\n            <Route exact path=\"/suscriptores\" component={UserIsAuthenticated(Suscriptores)} />\n            <Route exact path=\"/suscriptor/nuevo\" component={UserIsAuthenticated(NuevoSuscriptor)} />\n            <Route exact path=\"/suscriptor/mostrar/:id\" component={UserIsAuthenticated(MostrarSuscriptor)} />\n            <Route exact path=\"/suscriptor/editar/:id\" component={UserIsAuthenticated(EditarSuscriptor)} />\n            \n            <Route exact path=\"/login\" component={UserIsNotAuthenticated(Login)} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}